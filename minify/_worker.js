import{connect as V}from"cloudflare:sockets";var $="d342d11e-d424-4583-b36e-524ab1f0afa4",C=["cdn-all.xn--b6gac.eu.org","cdn.xn--b6gac.eu.org","cdn-b100.xn--b6gac.eu.org","edgetunnel.anycast.eu.org","cdn.anycast.eu.org"],E=C[Math.floor(Math.random()*C.length)],I="https://sky.rethinkdns.com/1:-Pf_____9_8A_AMAIgE8kMABVDDmKOHTAKg=",A="",k="",D="";if(!B($))throw new Error("uuid is not valid");var Z={async fetch(e,t,i){try{$=t.UUID||$,E=t.PROXYIP||E,I=t.DNS_RESOLVER_URL||I,A=t.NODE_ID||A,k=t.API_TOKEN||k,D=t.API_HOST||D;let n=e.headers.get("Upgrade");if(!n||n!=="websocket")switch(new URL(e.url).pathname){case"/":return new Response(JSON.stringify(e.cf,null,4),{status:200,headers:{"Content-Type":"application/json;charset=utf-8"}});case"/connect":let[l,r]=["cloudflare.com","80"];console.log(`Connecting to ${l}:${r}...`);try{let o=await V({hostname:l,port:parseInt(r,10)}),a=o.writable.getWriter();try{await a.write(new TextEncoder().encode(`GET / HTTP/1.1\r
Host: `+l+`\r
\r
`))}catch(d){return a.releaseLock(),await o.close(),new Response(d.message,{status:500})}a.releaseLock();let s=o.readable.getReader(),c;try{c=(await s.read()).value}catch(d){return await s.releaseLock(),await o.close(),new Response(d.message,{status:500})}return await s.releaseLock(),await o.close(),new Response(new TextDecoder().decode(c),{status:200})}catch(o){return new Response(o.message,{status:500})}case`/${$}`:{let o=q($,e.headers.get("Host"));return new Response(`${o}`,{status:200,headers:{"Content-Type":"text/plain;charset=utf-8"}})}default:return new Response("Not found",{status:404})}else return await M(e)}catch(n){let u=n;return new Response(u.toString())}}};async function M(e){let t=new WebSocketPair,[i,n]=Object.values(t);n.accept();let u="",l="",r=(w,g)=>{console.log(`[${u}:${l}] ${w}`,g||"")},o=e.headers.get("sec-websocket-protocol")||"",a=F(n,o,r),s={value:null},c=null,d=!1;return a.pipeTo(new WritableStream({async write(w,g){if(d&&c)return c(w);if(s.value){let T=s.value.writable.getWriter();await T.write(w),T.releaseLock();return}let{hasError:U,message:P,portRemote:h=443,addressRemote:y="",rawDataIndex:f,vlessVersion:m=new Uint8Array([0,0]),isUDP:b}=await G(w,$);if(u=y,l=`${h}--${Math.random()} ${b?"udp ":"tcp "} `,U)throw new Error(P);if(b)if(h===53)d=!0;else throw new Error("UDP proxy only enable for DNS which is port 53");let R=new Uint8Array([m[0],0]),S=w.slice(f);if(d){let{write:T}=await X(n,R,r);c=T,c(S);return}z(s,y,h,S,n,R,r)},close(){r("readableWebSocketStream is close")},abort(w){r("readableWebSocketStream is abort",JSON.stringify(w))}})).catch(w=>{r("readableWebSocketStream pipeTo error",w)}),new Response(null,{status:101,webSocket:i})}var L=null,W=null;async function H(){let e={method:"GET",redirect:"follow"};try{let t=await fetch(`https://${D}/api/v1/server/UniProxy/user?node_id=${A}&node_type=v2ray&token=${k}`,e);if(!t.ok)return console.error("Error: Network response was not ok"),null;let i=await t.json();return L=i,W&&clearTimeout(W),W=setTimeout(()=>H(),3e5),i}catch(t){return console.error("Error:",t),null}}async function j(){return L||await H()}async function v(e){if(!A||!k||!D)return!1;try{let t=await j();return t?t.users.some(n=>n.uuid===e):!1}catch(t){return console.error("Error:",t),!1}}async function z(e,t,i,n,u,l,r){async function o(c,d){let w=V({hostname:c,port:d});e.value=w,r(`connected to ${c}:${d}`);let g=w.writable.getWriter();return await g.write(n),g.releaseLock(),w}async function a(){let c=await o(E||t,i);c.closed.catch(d=>{console.log("retry tcpSocket closed error",d)}).finally(()=>{x(u)}),O(c,u,l,null,r)}let s=await o(t,i);O(s,u,l,a,r)}function F(e,t,i){let n=!1;return new ReadableStream({start(l){e.addEventListener("message",a=>{if(n)return;let s=a.data;l.enqueue(s)}),e.addEventListener("close",()=>{x(e),!n&&l.close()}),e.addEventListener("error",a=>{i("webSocketServer has error"),l.error(a)});let{earlyData:r,error:o}=K(t);o?l.error(o):r&&l.enqueue(r)},pull(l){},cancel(l){n||(i(`ReadableStream was canceled, due to ${l}`),n=!0,x(e))}})}async function G(e,t){if(e.byteLength<24)return{hasError:!0,message:"invalid data"};let i=new Uint8Array(e.slice(0,1)),n=!1,u=!1,l=new Uint8Array(e.slice(1,17)),r=Q(l),o=t.includes(",")?t.split(","):[t],a=await v(r);if(n=o.some(b=>a||r===b.trim()),console.log(`checkUuidInApi: ${await v(r)}, userID: ${r}`),!n)return{hasError:!0,message:"invalid user"};let s=new Uint8Array(e.slice(17,18))[0],c=new Uint8Array(e.slice(18+s,18+s+1))[0];if(c!==1)if(c===2)u=!0;else return{hasError:!0,message:`command ${c} is not support, command 01-tcp,02-udp,03-mux`};let d=18+s+1,w=e.slice(d,d+2),g=new DataView(w).getUint16(0),U=d+2,h=new Uint8Array(e.slice(U,U+1))[0],y=0,f=U+1,m="";switch(h){case 1:y=4,m=new Uint8Array(e.slice(f,f+y)).join(".");break;case 2:y=new Uint8Array(e.slice(f,f+1))[0],f+=1,m=new TextDecoder().decode(e.slice(f,f+y));break;case 3:y=16;let b=new DataView(e.slice(f,f+y)),R=[];for(let S=0;S<8;S++)R.push(b.getUint16(S*2).toString(16));m=R.join(":");break;default:return{hasError:!0,message:`invild  addressType is ${h}`}}return m?{hasError:!1,addressRemote:m,addressType:h,portRemote:g,rawDataIndex:f+y,vlessVersion:i,isUDP:u}:{hasError:!0,message:`addressValue is empty, addressType is ${h}`}}async function O(e,t,i,n,u){let l=0,r=[],o=i,a=!1;await e.readable.pipeTo(new WritableStream({start(){},async write(s,c){a=!0,t.readyState!==_&&c.error("webSocket.readyState is not open, maybe close"),o?(t.send(await new Blob([o,s]).arrayBuffer()),o=null):t.send(s)},close(){u(`remoteConnection!.readable is close with hasIncomingData is ${a}`)},abort(s){console.error("remoteConnection!.readable abort",s)}})).catch(s=>{console.error("remoteSocketToWS has exception ",s.stack||s),x(t)}),a===!1&&n&&(u("retry"),n())}function K(e){if(!e)return{error:null};try{e=e.replace(/-/g,"+").replace(/_/g,"/");let t=atob(e);return{earlyData:Uint8Array.from(t,n=>n.charCodeAt(0)).buffer,error:null}}catch(t){return{error:t}}}function B(e){return/^[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(e)}var _=1,Y=2;function x(e){try{(e.readyState===_||e.readyState===Y)&&e.close()}catch(t){console.error("safeCloseWebSocket error",t)}}var p=[];for(let e=0;e<256;++e)p.push((e+256).toString(16).slice(1));function J(e,t=0){return(p[e[t+0]]+p[e[t+1]]+p[e[t+2]]+p[e[t+3]]+"-"+p[e[t+4]]+p[e[t+5]]+"-"+p[e[t+6]]+p[e[t+7]]+"-"+p[e[t+8]]+p[e[t+9]]+"-"+p[e[t+10]]+p[e[t+11]]+p[e[t+12]]+p[e[t+13]]+p[e[t+14]]+p[e[t+15]]).toLowerCase()}function Q(e,t=0){let i=J(e,t);if(!B(i))throw TypeError("Stringified UUID is invalid");return i}async function X(e,t,i){let n=!1,u=new TransformStream({start(r){},transform(r,o){for(let a=0;a<r.byteLength;){let s=r.slice(a,a+2),c=new DataView(s).getUint16(0),d=new Uint8Array(r.slice(a+2,a+2+c));a=a+2+c,o.enqueue(d)}},flush(r){}});u.readable.pipeTo(new WritableStream({async write(r){let a=await(await fetch(I,{method:"POST",headers:{"content-type":"application/dns-message"},body:r})).arrayBuffer(),s=a.byteLength,c=new Uint8Array([s>>8&255,s&255]);e.readyState===_&&(i(`doh success and dns message length is ${s}`),n?e.send(await new Blob([c,a]).arrayBuffer()):(e.send(await new Blob([t,c,a]).arrayBuffer()),n=!0))}})).catch(r=>{i("dns udp has error"+r)});let l=u.writable.getWriter();return{write(r){l.write(r)}}}function q(e,t){let i=`vless://${e}@${t}:443?encryption=none&security=tls&sni=${t}&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2048#${t}`,n=`vless://${e}@${E}:443?encryption=none&security=tls&sni=${t}&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2048#${t}`;return`
################################################################
v2ray default ip
---------------------------------------------------------------
${i}
---------------------------------------------------------------
################################################################
v2ray with best ip
---------------------------------------------------------------
${n}
---------------------------------------------------------------
################################################################
clash-meta
---------------------------------------------------------------
- type: vless
  name: ${t}
  server: ${t}
  port: 443
  uuid: ${e}
  network: ws
  tls: true
  udp: false
  sni: ${t}
  client-fingerprint: chrome
  ws-opts:
    path: "/?ed=2048"
    headers:
      host: ${t}
---------------------------------------------------------------
################################################################
`}export{Z as default};
//# sourceMappingURL=_worker.js.map
